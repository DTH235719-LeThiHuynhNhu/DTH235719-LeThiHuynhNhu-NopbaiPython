import os

# ============ H√ÄM X·ª¨ L√ù FILE ============

def LuuFile(path, data):
    """Ghi 1 d√≤ng d·ªØ li·ªáu v√†o file"""
    with open(path, 'a', encoding='utf-8') as f:
        f.write(data + "\n")


def GhiDeFile(path, list_data):
    """Ghi ƒë√® to√†n b·ªô danh s√°ch v√†o file"""
    with open(path, 'w', encoding='utf-8') as f:
        for line in list_data:
            f.write(line + "\n")


def DocFile(path):
    """ƒê·ªçc d·ªØ li·ªáu t·ª´ file -> tr·∫£ v·ªÅ list s·∫£n ph·∫©m"""
    ds = []
    if not os.path.exists(path):
        return ds
    with open(path, 'r', encoding='utf-8') as f:
        for line in f:
            data = line.strip()
            if data != "":
                arr = data.split(';')
                ds.append(arr)
    return ds

# ============ H√ÄM X·ª¨ L√ù NGHI·ªÜP V·ª§ ============

def XuatDanhSach(ds):
    print("\n{:<6}{:<15}{:<10}{:<15}{:<10}".format("MaDM", "TenDM", "MaSP", "TenSP", "DonGia"))
    print("-"*60)
    for sp in ds:
        print("{:<6}{:<15}{:<10}{:<15}{:<10}".format(sp[0], sp[1], sp[2], sp[3], sp[4]))


def ThemSanPham(ds):
    maDM = input("Nh·∫≠p m√£ danh m·ª•c: ")
    tenDM = input("Nh·∫≠p t√™n danh m·ª•c: ")
    maSP = input("Nh·∫≠p m√£ s·∫£n ph·∫©m: ")
    tenSP = input("Nh·∫≠p t√™n s·∫£n ph·∫©m: ")
    donGia = input("Nh·∫≠p ƒë∆°n gi√°: ")
    sp = [maDM, tenDM, maSP, tenSP, donGia]
    ds.append(sp)
    print("‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m m·ªõi!")


def SuaSanPham(ds):
    maSP = input("Nh·∫≠p m√£ s·∫£n ph·∫©m c·∫ßn s·ª≠a: ")
    for sp in ds:
        if sp[2] == maSP:
            print("T√¨m th·∫•y:", sp)
            sp[3] = input("T√™n m·ªõi: ")
            sp[4] = input("ƒê∆°n gi√° m·ªõi: ")
            print("‚úÖ ƒê√£ c·∫≠p nh·∫≠t!")
            return
    print("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.")


def XoaSanPham(ds):
    maSP = input("Nh·∫≠p m√£ s·∫£n ph·∫©m c·∫ßn x√≥a: ")
    for sp in ds:
        if sp[2] == maSP:
            ds.remove(sp)
            print("‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m!")
            return
    print("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.")


def TimKiem(ds):
    keyword = input("Nh·∫≠p t√™n s·∫£n ph·∫©m c·∫ßn t√¨m: ").lower()
    kq = [sp for sp in ds if keyword in sp[3].lower()]
    if kq:
        XuatDanhSach(kq)
    else:
        print("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o!")


def SapXep(ds):
    ds.sort(key=lambda x: x[3])  # s·∫Øp x·∫øp theo t√™n s·∫£n ph·∫©m
    print("‚úÖ ƒê√£ s·∫Øp x·∫øp theo t√™n s·∫£n ph·∫©m.")

# ============ CH∆Ø∆†NG TR√åNH CH√çNH ============

def main():
    path = "sanpham.txt"
    dsSanPham = DocFile(path)

    while True:
        print("""
========== QU·∫¢N L√ù S·∫¢N PH·∫®M ==========
1. Xem danh s√°ch
2. Th√™m s·∫£n ph·∫©m
3. S·ª≠a s·∫£n ph·∫©m
4. X√≥a s·∫£n ph·∫©m
5. T√¨m ki·∫øm s·∫£n ph·∫©m
6. S·∫Øp x·∫øp s·∫£n ph·∫©m theo t√™n
7. L∆∞u file
8. Tho√°t
======================================
""")
        chon = input("Ch·ªçn ch·ª©c nƒÉng (1-8): ")

        if chon == '1':
            XuatDanhSach(dsSanPham)
        elif chon == '2':
            ThemSanPham(dsSanPham)
        elif chon == '3':
            SuaSanPham(dsSanPham)
        elif chon == '4':
            XoaSanPham(dsSanPham)
        elif chon == '5':
            TimKiem(dsSanPham)
        elif chon == '6':
            SapXep(dsSanPham)
        elif chon == '7':
            # Ghi l·∫°i to√†n b·ªô danh s√°ch v√†o file
            data_lines = [';'.join(sp) for sp in dsSanPham]
            GhiDeFile(path, data_lines)
            print("üíæ ƒê√£ l∆∞u d·ªØ li·ªáu v√†o file sanpham.txt")
        elif chon == '8':
            print("üëã T·∫°m bi·ªát!")
            break
        else:
            print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")

if __name__ == "__main__":
    main()
