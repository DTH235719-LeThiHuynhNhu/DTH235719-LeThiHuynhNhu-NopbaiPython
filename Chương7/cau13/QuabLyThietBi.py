import xml.dom.minidom

# ===============================
# H√†m ƒë·ªçc nh√≥m thi·∫øt b·ªã
# ===============================
def DocNhomThietBi(path):
    try:
        DOMTree = xml.dom.minidom.parse(path)
        collection = DOMTree.documentElement
        nhoms = collection.getElementsByTagName("nhom")

        print("üìÅ DANH S√ÅCH NH√ìM THI·∫æT B·ªä:")
        ds_nhom = {}
        for nhom in nhoms:
            ma = nhom.getElementsByTagName('ma')[0].childNodes[0].data
            ten = nhom.getElementsByTagName('ten')[0].childNodes[0].data
            ds_nhom[ma] = ten
            print(f"  {ma} - {ten}")
        return ds_nhom

    except FileNotFoundError:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file {path}")
        return {}

# ===============================
# H√†m ƒë·ªçc danh s√°ch thi·∫øt b·ªã
# ===============================
def DocThietBi(path, ds_nhom):
    try:
        DOMTree = xml.dom.minidom.parse(path)
        collection = DOMTree.documentElement
        thietbis = collection.getElementsByTagName("thietbi")

        print("\nüí° DANH S√ÅCH THI·∫æT B·ªä:")
        for tb in thietbis:
            manhom = tb.getAttribute("manhom")
            ma = tb.getElementsByTagName('ma')[0].childNodes[0].data
            ten = tb.getElementsByTagName('ten')[0].childNodes[0].data
            ten_nhom = ds_nhom.get(manhom, "Kh√¥ng x√°c ƒë·ªãnh")
            print(f"  {ma} - {ten} (Thu·ªôc nh√≥m: {ten_nhom})")

    except FileNotFoundError:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file {path}")

# ===============================
# Ch∆∞∆°ng tr√¨nh ch√≠nh
# ===============================
def main():
    print("=== CH∆Ø∆†NG TR√åNH QU·∫¢N L√ù THI·∫æT B·ªä (XML) ===")

    ds_nhom = DocNhomThietBi("nhomthietbi.xml")
    if ds_nhom:
        DocThietBi("thietbi.xml", ds_nhom)

if __name__ == "__main__":
    main()
